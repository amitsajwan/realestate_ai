version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: real-estate-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: real_estate_platform
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - real-estate-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: real-estate-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - real-estate-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: real-estate-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Database
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017
      - DATABASE_NAME=real_estate_platform
      
      # Authentication
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRE_MINUTES=30
      - BCRYPT_ROUNDS=12
      
      # Server
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=False
      
      # CORS
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      
      # Rate Limiting
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=60
      
      # Facebook Integration (Optional)
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID:-}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET:-}
      - FACEBOOK_ACCESS_TOKEN=${FACEBOOK_ACCESS_TOKEN:-}
      
      # Email Configuration (Optional)
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_USE_TLS=${SMTP_USE_TLS:-True}
      
      # Logging
      - LOG_LEVEL=INFO
      - LOG_FILE=logs/app.log
      
      # Feature Flags
      - ENABLE_MULTILANGUAGE=True
      - ENABLE_FACEBOOK_INTEGRATION=True
      - ENABLE_EMAIL_NOTIFICATIONS=False
      - ENABLE_ANALYTICS=True
      - ENABLE_AI_FEATURES=True
      
      # Security
      - SECURE_SSL_REDIRECT=False
      - SESSION_COOKIE_SECURE=False
      - SESSION_COOKIE_HTTPONLY=True
      - SESSION_COOKIE_SAMESITE=Lax
      
      # External Services
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:-}
      
      # Monitoring
      - SENTRY_DSN=${SENTRY_DSN:-}
      
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - real-estate-network
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: real-estate-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # API Configuration - Use relative paths for single URL deployment
      - NEXT_PUBLIC_API_BASE_URL=
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      
      # Environment
      - NODE_ENV=production
      
      # Feature Flags
      - NEXT_PUBLIC_ENABLE_MULTILANGUAGE=true
      - NEXT_PUBLIC_ENABLE_FACEBOOK_INTEGRATION=true
      - NEXT_PUBLIC_ENABLE_AI_FEATURES=true
      - NEXT_PUBLIC_ENABLE_ANALYTICS=true
      
      # Facebook Integration
      - NEXT_PUBLIC_FACEBOOK_APP_ID=${FACEBOOK_APP_ID:-}
      
      # Google Services
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY:-}
      - NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID:-}
      
      # Application Settings
      - NEXT_PUBLIC_APP_NAME=PropertyAI
      - NEXT_PUBLIC_APP_VERSION=1.0.0
      - NEXT_PUBLIC_DEFAULT_LANGUAGE=en
      
      # UI Configuration
      - NEXT_PUBLIC_DEFAULT_THEME=light
      - NEXT_PUBLIC_ENABLE_DARK_MODE=true
      - NEXT_PUBLIC_ENABLE_ANIMATIONS=true
      
      # Security
      - NEXT_PUBLIC_FORCE_HTTPS=false
      
      # Monitoring
      - NEXT_PUBLIC_SENTRY_DSN=${SENTRY_DSN:-}
      - NEXT_PUBLIC_ENABLE_ERROR_REPORTING=true
      
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - real-estate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: real-estate-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - real-estate-network
    profiles:
      - production

  # Monitoring with Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: real-estate-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - real-estate-network
    profiles:
      - monitoring

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: real-estate-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - real-estate-network
    profiles:
      - monitoring

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  real-estate-network:
    driver: bridge